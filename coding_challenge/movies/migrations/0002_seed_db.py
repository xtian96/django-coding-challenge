# Generated by Django 4.2.11 on 2024-08-30 23:26

from django.db import migrations, models

def populate_db(apps, schema_editor):
    Movie = apps.get_model("movies", "Movie")
    Reviews = apps.get_model("movies", "Reviews")
    db_alias = schema_editor.connection.alias

    # Create movies
    forrest_gump = Movie.objects.using(db_alias).create(
        title="Forrest Gump", runtime=142, release_date="1994-07-06"
    )
    toy_story = Movie.objects.using(db_alias).create(
        title="Toy Story", runtime=77, release_date="1995-11-22"
    )
    captain_phillips = Movie.objects.using(db_alias).create(
        title="Captain Phillips", runtime=134, release_date="2013-10-11"
    )
    catch_me_if_you_can = Movie.objects.using(db_alias).create(
        title="Catch Me If You Can", runtime=141, release_date="2002-12-25"
    )
    bridge_of_spies = Movie.objects.using(db_alias).create(
        title="Bridge of Spies", runtime=142, release_date="2015-10-16"
    )

    # Create reviews
    Reviews.objects.using(db_alias).bulk_create([
        Reviews(movie=forrest_gump, name="Reviewer 1", rating=9),
        Reviews(movie=forrest_gump, name="Reviewer 2", rating=8),
        Reviews(movie=toy_story, name="Reviewer 1", rating=8),
        Reviews(movie=toy_story, name="Reviewer 2", rating=9),
        Reviews(movie=captain_phillips, name="Reviewer 1", rating=7),
        Reviews(movie=captain_phillips, name="Reviewer 2", rating=8),
        Reviews(movie=catch_me_if_you_can, name="Reviewer 1", rating=8),
        Reviews(movie=catch_me_if_you_can, name="Reviewer 2", rating=9),
        Reviews(movie=bridge_of_spies, name="Reviewer 1", rating=7),
        Reviews(movie=bridge_of_spies, name="Reviewer 2", rating=8),
    ])

def empty_db(apps, schema_editor):
    Movie = apps.get_model("movies", "Movie")
    Reviews = apps.get_model("movies", "Reviews")
    db_alias = schema_editor.connection.alias

    Reviews.objects.using(db_alias).filter(movie__title__in=[
        "Forrest Gump",
        "Toy Story",
        "Captain Phillips",
        "Catch Me If You Can",
        "Bridge of Spies",
    ]).delete()

    Movie.objects.using(db_alias).filter(title__in=[
        "Forrest Gump",
        "Toy Story",
        "Captain Phillips",
        "Catch Me If You Can",
        "Bridge of Spies",
    ]).delete()

class Migration(migrations.Migration):

    dependencies = [
        ("movies", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(populate_db, empty_db),
    ]